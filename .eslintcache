[{"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/hooks/useTable.js":"1","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/index.js":"2","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/Header.js":"3","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/pages/employees/Employees.js":"4","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/pages/employees/EmployeeForm.js":"5","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/Notification.js":"6","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/hooks/useFirestore.js":"7","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/services/employeeServices.js":"8","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/hooks/useForm.js":"9","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomButton.js":"10","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomSelect.js":"11","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/App.js":"12","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/Popup.js":"13","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/ConfirmDialog.js":"14","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/Controls.js":"15","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/ActionButton.js":"16","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomCheckbox.js":"17","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/firebase/config.js":"18","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomInput.js":"19","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomDatePicker.js":"20","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/SideMenu.js":"21","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomRadioGroup.js":"22","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/PageHeader.js":"23"},{"size":3608,"mtime":1606968305292,"results":"24","hashOfConfig":"25"},{"size":232,"mtime":1606961898232,"results":"26","hashOfConfig":"25"},{"size":1503,"mtime":1606924946943,"results":"27","hashOfConfig":"25"},{"size":5710,"mtime":1606965922363,"results":"28","hashOfConfig":"25"},{"size":3735,"mtime":1606928037129,"results":"29","hashOfConfig":"25"},{"size":952,"mtime":1606916334546,"results":"30","hashOfConfig":"25"},{"size":504,"mtime":1606873450738,"results":"31","hashOfConfig":"25"},{"size":318,"mtime":1606916334574,"results":"32","hashOfConfig":"25"},{"size":1039,"mtime":1606959796322,"results":"33","hashOfConfig":"25"},{"size":603,"mtime":1606878858900,"results":"34","hashOfConfig":"25"},{"size":2309,"mtime":1606916334574,"results":"35","hashOfConfig":"25"},{"size":1123,"mtime":1606962042713,"results":"36","hashOfConfig":"25"},{"size":1728,"mtime":1606916334550,"results":"37","hashOfConfig":"25"},{"size":1275,"mtime":1606916334546,"results":"38","hashOfConfig":"25"},{"size":460,"mtime":1606916334570,"results":"39","hashOfConfig":"25"},{"size":824,"mtime":1606916334550,"results":"40","hashOfConfig":"25"},{"size":578,"mtime":1606827967621,"results":"41","hashOfConfig":"25"},{"size":737,"mtime":1606801761878,"results":"42","hashOfConfig":"25"},{"size":407,"mtime":1606928041705,"results":"43","hashOfConfig":"25"},{"size":729,"mtime":1606878770514,"results":"44","hashOfConfig":"25"},{"size":421,"mtime":1606960094517,"results":"45","hashOfConfig":"25"},{"size":615,"mtime":1606916334570,"results":"46","hashOfConfig":"25"},{"size":1140,"mtime":1606815887125,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17tcujx",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"72"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/hooks/useTable.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/index.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/Header.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/pages/employees/Employees.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/pages/employees/EmployeeForm.js",["101"],"import { Grid } from '@material-ui/core'\nimport React, { useEffect } from 'react'\nimport { Controls } from '../../controls/Controls'\nimport { useForm, Form } from '../../../hooks/useForm'\n// import * as employeeService from '../../../services/employeeServices'\n\nconst initialValues = {\n  fullname: '',\n  email: '',\n  mobile: '',\n  gender: 'male',\n  city: '',\n  department: '',\n  hireDate: new Date(),\n  isPermanent: false\n}\n\nconst genderItems = [\n  { id: 'male', name: 'Male' },\n  { id: 'female', name: 'Female' }\n]\n\nexport default function EmployeeForm({\n  addOrEdit, recordForEdit\n}) {\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors }\n    if ('fullname' in fieldValues)\n      temp.fullname = fieldValues.fullname ? '' : 'This field is required'\n    if ('email' in fieldValues)\n      temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? '' : 'Email is not valid'\n    if ('mobile' in fieldValues)\n      temp.mobile = fieldValues.mobile.length > 9 ? '' : 'Not a valid contact number'\n    if ('department' in fieldValues)\n      temp.department = fieldValues.department.length !== 0 ? '' : 'This field is required'\n    setErrors({ ...temp })\n\n    if (fieldValues === values)\n      return Object.values(temp).every(x => x === '')\n  }\n\n  const {\n    values,\n    setValues,\n    handleInputChange,\n    errors,\n    setErrors,\n    resetForm\n  } = useForm(initialValues, true, validate)\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (validate()) {\n      addOrEdit(values, resetForm)\n    }\n  }\n\n  useEffect(() => {\n    if (recordForEdit !== null)\n      setValues({ ...recordForEdit })\n  }, [recordForEdit])\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.CustomInput\n            label='Full Name'\n            name='fullname'\n            value={values.fullname}\n            onChange={handleInputChange}\n            error={errors.fullname}\n          />\n          <Controls.CustomInput\n            label='Email'\n            name='email'\n            value={values.email}\n            onChange={handleInputChange}\n            error={errors.email}\n          />\n          <Controls.CustomInput\n            label='Mobile'\n            name='mobile'\n            value={values.mobile}\n            onChange={handleInputChange}\n            error={errors.mobile}\n          />\n          <Controls.CustomInput\n            label='City'\n            name='city'\n            value={values.city}\n            onChange={handleInputChange}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <Controls.CustomRadioGroup\n            row\n            name='gender'\n            label='Gender'\n            value={values.gender}\n            onChange={handleInputChange}\n            items={genderItems}\n          />\n          <Controls.CustomSelect\n            name='department'\n            label='Department'\n            value={values.department}\n            onChange={handleInputChange}\n            error={errors.department}\n          />\n          <Controls.CustomDatePicker\n            name='hireDate'\n            label='Date Hired'\n            value={values.hireDate}\n            onChange={handleInputChange}\n          />\n          <Controls.CustomCheckbox\n            name='isPermanent'\n            label='Permanent Employee'\n            value={values.isPermanent}\n            onChange={handleInputChange}\n          />\n          <div>\n            <Controls.CustomButton\n              type='submit'\n              text='Submit'\n            />\n            <Controls.CustomButton\n              color='default'\n              text='Reset'\n              onClick={resetForm}\n            />\n          </div>\n        </Grid>\n      </Grid>\n    </Form>\n  )\n}\n",["102","103"],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/Notification.js",[],["104","105"],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/hooks/useFirestore.js",[],["106","107"],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/services/employeeServices.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/hooks/useForm.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomButton.js",[],["108","109"],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomSelect.js",["110","111","112"],"import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormHelperText, InputLabel, MenuItem, Select, TextField } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport { useFirestore } from '../../hooks/useFirestore';\n\nexport default function CustomSelect({\n  name, value, label, error, onChange\n}) {\n\n  const [open, setOpen] = React.useState(false);\n  const [depts, setDepts] = useState([])\n  const [newDept, setNewDept] = useState('')\n\n  const { docs } = useFirestore('employees')\n\n  useEffect(() => {\n    let d = []\n    docs.forEach(i => {\n      if (!d.includes(i.department))\n        d.push(i.department)\n    })\n    setDepts(d)\n  }, [docs])\n\n  const handleAdd = () => {\n    if (!depts.includes(newDept))\n      setDepts([...depts, newDept])\n    setOpen(false);\n  }\n\n  return (\n    <>\n      <FormControl\n        variant='outlined'\n        {...(error && { error: true })}\n      >\n        <TextField\n          margin='dense'\n          variant='outlined'\n          id='select'\n          label={label}\n          name={name}\n          select\n          value={value}\n          onChange={onChange}\n        >\n          <MenuItem value='' onClick={() => setOpen(true)}>\n            New\n        </MenuItem>\n          {\n            depts.map((item, index) => (\n              <MenuItem\n                key={index}\n                value={item}\n              >{item}</MenuItem>\n            ))\n          }\n        </TextField>\n        {error && <FormHelperText>{error}</FormHelperText>}\n      </FormControl>\n      <Dialog open={open} onClose={() => setOpen(false)} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Add new department</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Department\"\n            type=\"text\"\n            variant='outlined'\n            onChange={e => setNewDept(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpen(false)} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleAdd} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n","/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/App.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/Popup.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/ConfirmDialog.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/Controls.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/ActionButton.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomCheckbox.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/firebase/config.js",[],["113","114"],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomInput.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomDatePicker.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/SideMenu.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/controls/CustomRadioGroup.js",[],"/home/jimcan/Jimcan/JavaScript/ElectronReact/inventory-system/src/components/PageHeader.js",[],{"ruleId":"115","severity":1,"message":"116","line":61,"column":6,"nodeType":"117","endLine":61,"endColumn":21,"suggestions":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"119","replacedBy":"123"},{"ruleId":"121","replacedBy":"124"},{"ruleId":"119","replacedBy":"125"},{"ruleId":"121","replacedBy":"126"},{"ruleId":"119","replacedBy":"127"},{"ruleId":"121","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":1,"column":56,"nodeType":"131","messageId":"132","endLine":1,"endColumn":73},{"ruleId":"129","severity":1,"message":"133","line":1,"column":117,"nodeType":"131","messageId":"132","endLine":1,"endColumn":127},{"ruleId":"129","severity":1,"message":"134","line":1,"column":139,"nodeType":"131","messageId":"132","endLine":1,"endColumn":145},{"ruleId":"119","replacedBy":"135"},{"ruleId":"121","replacedBy":"136"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-native-reassign",["138"],"no-negated-in-lhs",["139"],["138"],["139"],["138"],["139"],["138"],["139"],"no-unused-vars","'DialogContentText' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","'Select' is defined but never used.",["138"],["139"],{"desc":"140","fix":"141"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [recordForEdit, setValues]",{"range":"142","text":"143"},[1623,1638],"[recordForEdit, setValues]"]